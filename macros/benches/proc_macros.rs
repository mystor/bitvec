#![feature(test)]

extern crate test;

use test::Bencher;
use bitvec_macros::*;

#[bench]
fn bitslice_init(b: &mut Bencher) {
	b.iter(|| bits![0; 2304]);
	b.iter(|| bits![1; 2304]);
}

#[bench]
fn bitslice_pattern(b: &mut Bencher) {
	b.iter(|| bits![
		0, 1, 0, 1, 0, 0, 1, 1,
		0, 1, 1, 0, 0, 0, 0, 1,
		0, 1, 1, 0, 1, 1, 0, 0,
		0, 1, 1, 1, 0, 1, 0, 1,
		0, 1, 1, 1, 0, 1, 0, 0,
		0, 1, 1, 0, 1, 1, 1, 1,
		0, 1, 1, 0, 1, 1, 1, 0,
		0, 0, 1, 0, 1, 1, 0, 0,
		0, 0, 1, 0, 0, 0, 0, 0,
		0, 1, 1, 0, 1, 1, 0, 1,
		0, 1, 1, 0, 1, 1, 1, 1,
		0, 1, 1, 0, 1, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 0, 0,
		0, 1, 1, 0, 1, 1, 1, 1,
		0, 0, 1, 0, 0, 0, 0, 1,
	]);
}

#[bench]
fn bitvec_init(b: &mut Bencher) {
	b.iter(|| bitvec![0; 2304]);
	b.iter(|| bitvec![1; 2304]);
}

#[bench]
fn bitvec_pattern(b: &mut Bencher) {
	b.iter(|| bitvec![
		0, 1, 0, 1, 0, 0, 1, 1,
		0, 1, 1, 0, 0, 0, 0, 1,
		0, 1, 1, 0, 1, 1, 0, 0,
		0, 1, 1, 1, 0, 1, 0, 1,
		0, 1, 1, 1, 0, 1, 0, 0,
		0, 1, 1, 0, 1, 1, 1, 1,
		0, 1, 1, 0, 1, 1, 1, 0,
		0, 0, 1, 0, 1, 1, 0, 0,
		0, 0, 1, 0, 0, 0, 0, 0,
		0, 1, 1, 0, 1, 1, 0, 1,
		0, 1, 1, 0, 1, 1, 1, 1,
		0, 1, 1, 0, 1, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 0, 0,
		0, 1, 1, 0, 1, 1, 1, 1,
		0, 0, 1, 0, 0, 0, 0, 1,
	]);
}
